{"version":3,"sources":["utils/auth.js","components/Header/NavTabs.js","components/Header/index.js","utils/queries.js","utils/mutations.js","components/ShoeCard.js","pages/Home.js","pages/Login.js","pages/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","NavTabs","className","Auth","loggedIn","to","href","onClick","logout","Header","event","preventDefault","QUERY_SHOES","gql","LOGIN_USER","ADD_USER","ADD_REVIEW","ShoeCard","props","useState","reviewActive","setReviewActive","reviewBody","setBody","setCharacterCount","useMutation","addReview","shoeId","error","console","log","string","handleSubmit","variables","reload","randomReview","Math","floor","random","review","length","shoeName","src","photo","alt","shoeDisc","shoeSize","gender","charAt","toUpperCase","slice","shoePrice","placeholder","value","onChange","target","undefined","username","Home","useQuery","data","loading","shoes","map","e","_id","shoe_name","price","shoe_description","shoe_size","photo_ref","reviews","Login","email","password","formState","setFormState","login","handleChange","name","handleFormSubmit","onSubmit","type","id","Signup","addUser","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d4bc759.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    // axios.defaults.headers.common[\"Authorization\"] = null;\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Auth from \"../../utils/auth\";\n\nfunction NavTabs() {\n  return (\n    <nav className=\"text-center\">\n      {Auth.loggedIn() ? (\n        <>\n          <Link to=\"/profile\">Me</Link>\n          <a href=\"/\" onClick={logout}>\n            Logout\n          </a>\n        </>\n      ) : (\n        <>\n          <Link to=\"/login\">Login</Link>\n          <Link to=\"/signup\">Signup</Link>\n        </>\n      )}\n    </nav>\n  );\n}\nexport default NavTabs;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Auth from \"../../utils/auth\";\n\nimport NavTabs from \"./NavTabs\";\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <header className=\"bg-secondary mb-4 py-2 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <Link to=\"/\">\n          <h1>Nikes On My Feet</h1>\n        </Link>\n        {Auth.loggedIn() ? (\n          <>\n            <a href=\"/\" onClick={logout}>\n              Logout\n            </a>\n          </>\n        ) : (\n          <NavTabs />\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","// one apollo client is connected to backend apollo server in app.js insert queries here.\nimport { gql } from \"@apollo/client\";\n\nexport const QUERY_SHOES = gql`\n  query Query {\n    shoes {\n      _id\n      shoe_name\n      price\n      shoe_description\n      shoe_size\n      photo_ref\n      gender\n      reviews {\n        _id\n        reviewBody\n        username\n      }\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  {\n    me {\n      _id\n      username\n      email\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_REVIEW = gql`\n  mutation addReview($shoeId: ID!, $reviewBody: String!) {\n    addReview(shoeId: $shoeId, reviewBody: $reviewBody) {\n      reviews {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\n\nimport Auth from \"../utils/auth\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_REVIEW } from \"../utils/mutations\";\n\nexport default function ShoeCard(props) {\n  const [reviewActive, setReviewActive] = useState(false);\n  const [reviewBody, setBody] = useState(\"\");\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addReview, { error }] = useMutation(ADD_REVIEW);\n\n  let shoeId = props.shoeId;\n\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setBody(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  };\n  console.log(\"body: \" + reviewBody, \"ID: \" + shoeId);\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await addReview({\n        variables: { reviewBody, shoeId },\n      });\n\n      // clear form value\n      setBody(\"\");\n      setReviewActive(false);\n      setCharacterCount(0);\n      window.location.reload();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const handleReviewButton = () => {\n    setReviewActive(true);\n  };\n\n  let randomReview = Math.floor(Math.random() * props.review.length);\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <span className=\"text-light\">{props.shoeName}</span>\n      </div>\n      <div className=\"card-body flex-row\">\n        <div className=\"card-photo-holder\">\n          <img src={`./images/shoes/${props.photo}`} alt=\"A Shoe\"></img>\n        </div>\n        <div className=\"card-info-holder col-12 col-lg-8\">\n          <p>{props.shoeDisc}</p>\n          <p>Size: {props.shoeSize}</p>\n          <p>{capitalizeFirstLetter(props.gender)}</p>\n          <h3>Price: ${props.shoePrice}</h3>\n          {Auth.loggedIn() && !reviewActive ? (\n            <button className=\"btn\" onClick={handleReviewButton}>\n              Leave Review\n            </button>\n          ) : (\n            <p></p>\n          )}\n          {reviewActive == true && (\n            <div className=\"flex-row\">\n              <textarea\n                placeholder=\"Leave a review about this shoe\"\n                value={reviewBody}\n                onChange={handleChange}\n              />\n              <button className=\"btn ml-3\" onClick={handleSubmit}>\n                Submit\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n      {props.review[0] !== undefined ? (\n        <div className=\"ml-4\">\n          <p>\n            {props.review[randomReview].username} said:{\" \"}\n            {props.review[randomReview].reviewBody}\n          </p>\n        </div>\n      ) : (\n        <p></p>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Auth from \"../utils/auth\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_SHOES } from \"../utils/queries\";\n\nimport ShoeCard from \"../components/ShoeCard\";\n\nexport default function Home() {\n  const { loading, data } = useQuery(QUERY_SHOES);\n  const shoes = data?.shoes || [];\n\n  return (\n    <main>\n      {shoes.map((e) => {\n        console.log(e);\n        return (\n          <ShoeCard\n            shoeId={e._id}\n            shoeName={e.shoe_name}\n            shoePrice={e.price}\n            shoeDisc={e.shoe_description}\n            shoeSize={e.shoe_size}\n            photo={e.photo_ref}\n            gender={e.gender}\n            review={e.reviews}\n          />\n        );\n      })}\n    </main>\n  );\n}\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-md-6\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Login</h4>\n          <div className=\"card-body\">\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className=\"form-input\"\n                placeholder=\"Your email\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button className=\"btn d-block w-100\" type=\"submit\">\n                Submit\n              </button>\n            </form>\n\n            {error && <div>Login failed</div>}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-md-6\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Sign Up</h4>\n          <div className=\"card-body\">\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className=\"form-input\"\n                placeholder=\"Your username\"\n                name=\"username\"\n                type=\"username\"\n                id=\"username\"\n                value={formState.username}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"Your email\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button className=\"btn d-block w-100\" type=\"submit\">\n                Submit\n              </button>\n            </form>\n\n            {error && <div>Signup failed</div>}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Header from \"./components/Header\";\n\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\n\n//for auth\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:3001/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Header />\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/signup\" element={<Signup />} />\n          </Routes>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals(console.log);\n"],"sourceRoot":""}